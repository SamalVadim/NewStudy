''' Вводится натуральное число n. С помощью цикла for определить,
является ли оно простым (то есть, делится нацело только на само себя и на 1).
Вывести на экран ДА, если n простое и НЕТ - в противном случае..'''
import math
import random

# n = int(input())
# for i in range(1, n+1):
#     if n % i == 0:
#         if i == 1 or i == n:
#             print('Да')
#         else:
#             print('Нет')


''' Вводится целое положительное число n. 
Вычислить и вывести на экран сумму: 1 + 1/2 + 1/3 + ... + 1/n с точностью до тысячных 
(три знака после запятой). Программу реализовать при помощи цикла while.'''

# n = int(input())
# i = 1
# a = []
# while i<= n:
#     a.append(1/i)
#     i +=1
# print(round(sum(a),3))

''' На каждой итерации цикла пользователь вводит целое число. Цикл продолжается,
 пока не встретится число 0. Необходимо вычислить сумму введенных 
 в цикле чисел и вывести результат на экран. Программу реализовать при помощи цикла while.'''

# i = 1
# s = []
# while i != 0:
#     i = int(input())
#     s.append(i)
# print(sum(s))

# ''' Вводится строка (слаг). Замените в этой строке все подряд идущие дефисы
# (--, ---, ---- и т.д.) на одинарные (-). Результат преобразования строки выведите на экран.
# Программу реализовать при помощи цикла while.'''
#
# a = 'osnovnye--metody-----slovarey'
# while '--' in a:
#     a = a.replace('--','-')
# print(a)

''' Вводится натуральное (то есть, целое положительное) число (от трехзначного и более). 
Найти произведение всех его цифр. Результат вывести на экран. 
Программу реализовать при помощи цикла while.'''

# a = list(map(int,input()))
# print(a[0], type(a[0]), type(a))
# i = 0
# p = 1
# while i != len(a):
#     p *= a[i]
#     i += 1
# print(p)

''' Последовательность Фибоначчи образуется так: первые два числа равны 1 и 1,
 а каждое последующее равно сумме двух предыдущих. Имеем такую последовательность 
 чисел: 1, 1, 2, 3, 5, 8, 13, ... 
 Постройте последовательность Фибоначчи длиной n (n вводится с клавиатуры). 
 Результат отобразите в виде строки полученных чисел, записанных через пробел. 
 Программу реализовать при помощи цикла while.'''
n = 8
lst = [1]
while(len(lst) <= 8):
    f = sum(lst[-2:])
    print(f)
    lst.append(f)
print(*lst)


# a = input()
# password = '123'
# count = 0
# while a!= password:
#     count += 1
#     print('repeat entry')
#     a = input()
# print('ok. your attempts is', count)

''' рандомно сгенерировано число от 1 до 9, если оно не любимое продолжаем дальше генерировать,
если нет заканчиваем прогу'''

# a = random.randint(1,10)
#
# love_num = 7
# i = 0
# while love_num != a:
#     a = random.randint(1, 10)
#     print(a)
#     i += 1
# if love_num == a:
#     print(a,"Yes")


'''На вход программе поступает слово. Вам необходимо воспроизвести процесс, 
в котором каждый раз у этого слово будет пропадать первая и последняя буква. 
Этот процесс необходимо закончить, когда в слове останется только одна буква 
или слово  станет пустой строкой. При этом результат каждого этапа нужно выводить'''

# a = 'Правильность'
# i = 0
# while len(a) > 0:
#     i += 0
#     a = a[1:-1]
#     print(a)


'''Дан произвольный список. Представьте его в обратном порядке.'''
# from random import randint
# a = [randint(1,100) for a in range(10)]
# print(a)
# #print(a[::-1])
# a.reverse()
# print(a)


'''Дан список некоторых целых чисел, найдите значение 20 в нем и, если оно присутствует, 
замените его на 200. Обновите список только при первом вхождении числа 20.'''

# a = [1,2,3,5,20,1,8,6,20]
# if 20 in a:
#     a.remove(20)
#     print(a)


'''Найти совпадающие элементы двух списков.
a = [5,[1,2],2,'r',4,'ee']
b = [4,'we','ee',3,[1,2]]
Эти значения записать в новый список
'''
# a = [5,[1,2],2,'r',4,'ee']
# b = [4,'we','ee',3,[1,2]]
#
# for i in a:
#     if i in b:
#         print(i)

'''Даны 2 списка:
a = [4,6,'pу',78]
b = [44,'hello’,56,'exept’,3]
Выполнить следующие операции:
Сложить два списка
Добавьте элемент 6 на 3 позицию в 2м списке. 
Удалите все текстовые переменные
4.  Посчитайте количество элементов списка
'''
# a = [4, 6, 'pу', 78]
# b = [44, 'hello', 56, "exept", 3]
# a.extend(b)
# print(a)
# s = a + b
# print(s)
# b.insert(3, 6)
# print(b)
#
# s_in = [i for i in range(0,100)]
# x = []
# for i in s_in:
#     if i in a:
#         x.append(i)
# print(x)     # я просто офигел, когда додумался до этого решения последнего пункта!

# a = input()
# print(a)
# while len(a)>0:
#     a = a[1:-1]
#     print(a)


''' Мишка Лимак хочет стать самым большим медведем, ну, или хотя бы стать больше своего старшего брата Боба.

Сейчас вес Лимака равен a, а вес Боба равен b. Гарантируется, что вес Лимака меньше или равен весу Боба.

Лимак ест много, и его вес утраивается каждый год, а вес Боба удваивается каждый год.

Через сколько целых лет Лимак станет строго больше (т. е. будет весить строго больше) Боба?'''

# a,b = map(int(input().split()))
#
# i = 0
# while a <= b:
#     i += 1
#     if a < b:
#         a = a*3
#         b = b*2
#     else:
#         a == b
#         break
# print(i)
# if a == b:
#     print(i+1)



# m = '2, -3, 5, 5, -2,0, 2, 3, 3, 4, 5, 4, 4'


